Модульное тестирование (Unit test)

Тестирование проекта относится к управлению качеством.
Тестирование бывет
 - нагрузочное (выдержит ли заданную нагрузку)
 - разверточное (можно ли проект установить на данную платформу: ОС, проц...)
 - производительности (время/операция или операция/время)
 ...
 -модульное - проверка частей программы (модулей) на правильность работы

 Тестирование обеспечивается отдельным пректом, чаще всего, включаемым в 
 решение, но может быть и полностью отдельным.
 В силу популярности задач тестирования для проектов есть шаблоны. В нашем случае
 выбран MSTest. Есть и другие, они не совместимы.
 Перед началом тестирование надо обеспечить связь проектов: тестового и
 основного (В зависимости тестового проекта добавить ссылку на проект основного)

 Одним из главных показателей тестирования - покрытие (кода тестами) coverage
 Это доля (процент) исходного кода, для которого есть тесты.
 0 - нет тестов вообще, 100% - каждая операция содержит для себя тесты.
 Логический оптимум - 70-80%

 Модуль тестирования - минимальная структурная часть программы, которая 
 имеет "правила работы" и эти правила можно (и нужно) проверить.
 В ООП программах - это методы.

 Реализация.
 Структура тестового проекта обычно соответствует структуре основого проекта
 App {                            |  AppTest {
     Class1 {                     |      Class1Test {
          Method1(x,y)            |           Test_Method1() { c1 = new Class1, c1.Method1(1,-1)}
          Method2                 |           Test_Method2
     }                            |      }
     Class1 {                     |      Class2Test {
          ctor                    |            Test_ctor
          Method1                 |            Test_Method1
          Method2                 |            Test_Method2
     }                            |      }
 }                                    }
 Тестовые методы не принимают значение и не принимают аргументов, только тестируют
 модули проекта. 
 Синтаксис написания утверждений - отличается в проектах разного типа.
 - проекты универсального синтаксиса (выражение на отдельном языке)
 - проекты языкового синтаксиса (выражение как в языке (напр. с#))

 Основа тестирования - утверждения (Assert). Тест пройден, если подтверждены все 
 утверждения, тест проверен, если хоть одно утверждение опровергнуто.

 TDD - Test Driven Development - разработка через тесты -
 "крайняя" форма тестирования, когда тесты создаются раньше, чем основной код.
 Можно воспринимать такие тесты как уточненное ТЗ
 BDD - Behaviour Driven Development - с применением универсального синтаксиса
 XP - eXtreme Programming - минималистичный подход: создать кратчайший код,
 удовлетворяющий всем тестам.
 Для проверки качества тестов можно использовать критерий "что проще - написать
 нормальный код или подделать рез-ты тестов"

 Запуск тестов - отдельно от запуска пректа. В VS - это меню Test - Run alla tests
 (или аналог в окне Test Explorer) 
